TEXT_BASE 0x0
main, 0x1063c: lw	a5,-20(s0)
main, 0x10640: sext.w	a4,a5
main, 0x10644: li	a5,1
main, 0x10646: blt	a5,a4,0x10662 <main+56>
main, 0x10662: lui	a5,0x52
main, 0x10666: addi	a0,a5,848
[CALL] main -> <puts>
main, 0x1066a: jal	ra,0x1a536 <puts>
puts, 0x1a536: addi	sp,sp,-48
puts, 0x1a538: sd	s3,8(sp)
puts, 0x1a53a: auipc	s3,0x5e
puts, 0x1a53e: ld	s3,-1418(s3)
puts, 0x1a542: sd	s0,32(sp)
puts, 0x1a544: sd	s1,24(sp)
puts, 0x1a546: sd	s2,16(sp)
puts, 0x1a548: sd	ra,40(sp)
puts, 0x1a54a: sd	s4,0(sp)
puts, 0x1a54c: mv	s2,a0
[CALL] puts -> <strlen>
puts, 0x1a54e: jal	ra,0x24c98 <strlen>
strlen, 0x24c98: andi	a5,a0,7
strlen, 0x24c9c: beqz	a5,0x24cb6 <strlen+30>
strlen, 0x24cb6: mv	a5,a0
strlen, 0x24cb8: auipc	a6,0x31
strlen, 0x24cbc: ld	a6,808(a6)
strlen, 0x24cc0: auipc	a1,0x31
strlen, 0x24cc4: ld	a1,808(a1)
strlen, 0x24cc8: ld	a3,0(a5)
strlen, 0x24cca: mv	a2,a5
strlen, 0x24ccc: addi	a5,a5,8
strlen, 0x24cce: add	a4,a3,a6
strlen, 0x24cd2: not	a3,a3
strlen, 0x24cd6: and	a4,a4,a3
strlen, 0x24cd8: and	a4,a4,a1
strlen, 0x24cda: beqz	a4,0x24cc8 <strlen+48>
strlen, 0x24cc8: ld	a3,0(a5)
strlen, 0x24cca: mv	a2,a5
strlen, 0x24ccc: addi	a5,a5,8
strlen, 0x24cce: add	a4,a3,a6
strlen, 0x24cd2: not	a3,a3
strlen, 0x24cd6: and	a4,a4,a3
strlen, 0x24cd8: and	a4,a4,a1
strlen, 0x24cda: beqz	a4,0x24cc8 <strlen+48>
strlen, 0x24cc8: ld	a3,0(a5)
strlen, 0x24cca: mv	a2,a5
strlen, 0x24ccc: addi	a5,a5,8
strlen, 0x24cce: add	a4,a3,a6
strlen, 0x24cd2: not	a3,a3
strlen, 0x24cd6: and	a4,a4,a3
strlen, 0x24cd8: and	a4,a4,a1
strlen, 0x24cda: beqz	a4,0x24cc8 <strlen+48>
strlen, 0x24cc8: ld	a3,0(a5)
strlen, 0x24cca: mv	a2,a5
strlen, 0x24ccc: addi	a5,a5,8
strlen, 0x24cce: add	a4,a3,a6
strlen, 0x24cd2: not	a3,a3
strlen, 0x24cd6: and	a4,a4,a3
strlen, 0x24cd8: and	a4,a4,a1
strlen, 0x24cda: beqz	a4,0x24cc8 <strlen+48>
strlen, 0x24cdc: lbu	a4,-8(a5)
strlen, 0x24ce0: beqz	a4,0x24d14 <strlen+124>
strlen, 0x24ce2: lbu	a4,-7(a5)
strlen, 0x24ce6: beqz	a4,0x24d1a <strlen+130>
strlen, 0x24ce8: lbu	a4,-6(a5)
strlen, 0x24cec: beqz	a4,0x24d22 <strlen+138>
strlen, 0x24cee: lbu	a4,-5(a5)
strlen, 0x24cf2: beqz	a4,0x24d2a <strlen+146>
strlen, 0x24cf4: lbu	a4,-4(a5)
strlen, 0x24cf8: beqz	a4,0x24d32 <strlen+154>
strlen, 0x24cfa: lbu	a4,-3(a5)
strlen, 0x24cfe: beqz	a4,0x24d3a <strlen+162>
strlen, 0x24d00: lbu	a4,-2(a5)
strlen, 0x24d04: beqz	a4,0x24d42 <strlen+170>
strlen, 0x24d06: lbu	a4,-1(a5)
strlen, 0x24d0a: bnez	a4,0x24cc8 <strlen+48>
strlen, 0x24d0c: sub	a2,a2,a0
strlen, 0x24d0e: addi	a0,a2,7
strlen, 0x24d12: ret
puts, 0x1a552: ld	s1,0(s3)
puts, 0x1a556: mv	s0,a0
puts, 0x1a558: lw	a5,0(s1)
puts, 0x1a55a: srli	a5,a5,0xf
puts, 0x1a55c: andi	a5,a5,1
puts, 0x1a55e: bnez	a5,0x1a59e <puts+104>
puts, 0x1a560: ld	a5,136(s1)
puts, 0x1a562: addi	s4,tp,-2016 # 0xfffffffffffff820
puts, 0x1a566: ld	a4,8(a5)
puts, 0x1a568: beq	a4,s4,0x1a646 <puts+272>
puts, 0x1a56c: li	a3,1
puts, 0x1a56e: lr.w	a4,(a5)
puts, 0x1a57a: sext.w	a4,a4
puts, 0x1a57c: bnez	a4,0x1a664 <puts+302>
puts, 0x1a57e: ld	a5,136(s1)
puts, 0x1a580: ld	a0,0(s3)
puts, 0x1a584: sd	s4,8(a5)
puts, 0x1a588: lw	a4,4(a5)
puts, 0x1a58a: addiw	a4,a4,1
puts, 0x1a58c: sw	a4,4(a5)
puts, 0x1a58e: lw	a5,192(a0)
puts, 0x1a592: beqz	a5,0x1a5a6 <puts+112>
puts, 0x1a5a6: li	a5,-1
puts, 0x1a5a8: sw	a5,192(a0)
puts, 0x1a5ac: ld	s4,216(a0)
puts, 0x1a5b0: auipc	a5,0x5e
puts, 0x1a5b4: ld	a5,-984(a5)
puts, 0x1a5b8: auipc	a4,0x5e
puts, 0x1a5bc: ld	a4,-1296(a4)
puts, 0x1a5c0: sub	a4,a4,a5
puts, 0x1a5c2: sub	a5,s4,a5
puts, 0x1a5c6: bgeu	a5,a4,0x1a64a <puts+276>
puts, 0x1a5ca: ld	a5,56(s4)
puts, 0x1a5ce: mv	a2,s0
puts, 0x1a5d0: mv	a1,s2
[CALL] puts -> a5
puts, 0x1a5d2: jalr	a5
_IO_new_file_xsputn, 0x1cd44: addi	sp,sp,-64
_IO_new_file_xsputn, 0x1cd46: sd	s3,24(sp)
_IO_new_file_xsputn, 0x1cd48: sd	ra,56(sp)
_IO_new_file_xsputn, 0x1cd4a: sd	s0,48(sp)
_IO_new_file_xsputn, 0x1cd4c: sd	s1,40(sp)
_IO_new_file_xsputn, 0x1cd4e: sd	s2,32(sp)
_IO_new_file_xsputn, 0x1cd50: sd	s4,16(sp)
_IO_new_file_xsputn, 0x1cd52: sd	s5,8(sp)
_IO_new_file_xsputn, 0x1cd54: li	s3,0
_IO_new_file_xsputn, 0x1cd56: beqz	a2,0x1cd9c <_IO_new_file_xsputn+88>
_IO_new_file_xsputn, 0x1cd58: ld	a4,0(a0)
_IO_new_file_xsputn, 0x1cd5a: lui	a5,0x1
_IO_new_file_xsputn, 0x1cd5c: addi	a5,a5,-1536
_IO_new_file_xsputn, 0x1cd60: and	a4,a4,a5
_IO_new_file_xsputn, 0x1cd62: mv	s0,a0
_IO_new_file_xsputn, 0x1cd64: mv	s4,a2
_IO_new_file_xsputn, 0x1cd66: ld	a0,40(a0)
_IO_new_file_xsputn, 0x1cd68: mv	s1,a1
_IO_new_file_xsputn, 0x1cd6a: beq	a4,a5,0x1cdb0 <_IO_new_file_xsputn+108>
_IO_new_file_xsputn, 0x1cd6e: ld	a4,48(s0)
_IO_new_file_xsputn, 0x1cd70: bgeu	a0,a4,0x1cdda <_IO_new_file_xsputn+150>
_IO_new_file_xsputn, 0x1cdda: mv	s2,s4
_IO_new_file_xsputn, 0x1cddc: ld	s3,216(s0)
_IO_new_file_xsputn, 0x1cde0: auipc	a5,0x5b
_IO_new_file_xsputn, 0x1cde4: ld	a5,1016(a5)
_IO_new_file_xsputn, 0x1cde8: auipc	a4,0x5b
_IO_new_file_xsputn, 0x1cdec: ld	a4,704(a4)
_IO_new_file_xsputn, 0x1cdf0: sub	a4,a4,a5
_IO_new_file_xsputn, 0x1cdf2: sub	a5,s3,a5
_IO_new_file_xsputn, 0x1cdf6: bgeu	a5,a4,0x1ce6a <_IO_new_file_xsputn+294>
_IO_new_file_xsputn, 0x1cdfa: ld	a5,24(s3)
_IO_new_file_xsputn, 0x1cdfe: li	a1,-1
_IO_new_file_xsputn, 0x1ce00: mv	a0,s0
[CALL] _IO_new_file_xsputn -> a5
_IO_new_file_xsputn, 0x1ce02: jalr	a5
_IO_new_file_overflow, 0x1d5ba: lw	a5,0(a0)
_IO_new_file_overflow, 0x1d5bc: addi	sp,sp,-32
_IO_new_file_overflow, 0x1d5be: sd	s0,16(sp)
_IO_new_file_overflow, 0x1d5c0: sd	ra,24(sp)
_IO_new_file_overflow, 0x1d5c2: sd	s1,8(sp)
_IO_new_file_overflow, 0x1d5c4: sd	s2,0(sp)
_IO_new_file_overflow, 0x1d5c6: andi	a4,a5,8
_IO_new_file_overflow, 0x1d5ca: mv	s0,a0
_IO_new_file_overflow, 0x1d5cc: bnez	a4,0x1d6f4 <_IO_new_file_overflow+314>
_IO_new_file_overflow, 0x1d5d0: srli	a4,a5,0xb
_IO_new_file_overflow, 0x1d5d4: andi	a4,a4,1
_IO_new_file_overflow, 0x1d5d6: ld	a3,32(a0)
_IO_new_file_overflow, 0x1d5d8: mv	s1,a1
_IO_new_file_overflow, 0x1d5da: beqz	a4,0x1d61a <_IO_new_file_overflow+96>
_IO_new_file_overflow, 0x1d61a: beqz	a3,0x1d6b8 <_IO_new_file_overflow+254>
_IO_new_file_overflow, 0x1d6b8: mv	a0,s0
[CALL] _IO_new_file_overflow -> <_IO_doallocbuf>
_IO_new_file_overflow, 0x1d6ba: jal	ra,0x1e00c <_IO_doallocbuf>
_IO_new_file_overflow, 0x1d6be: ld	a2,56(s0)
_IO_new_file_overflow, 0x1d6c0: lw	a5,0(s0)
_IO_new_file_overflow, 0x1d6c2: sd	a2,24(s0)
_IO_new_file_overflow, 0x1d6c4: sd	a2,8(s0)
_IO_new_file_overflow, 0x1d6c6: sd	a2,16(s0)
_IO_new_file_overflow, 0x1d6c8: j	0x1d61e <_IO_new_file_overflow+100>
_IO_new_file_overflow, 0x1d61e: andi	a4,a5,256
_IO_new_file_overflow, 0x1d622: bnez	a4,0x1d6ca <_IO_new_file_overflow+272>
_IO_new_file_overflow, 0x1d624: ld	a1,64(s0)
_IO_new_file_overflow, 0x1d626: beq	a1,a2,0x1d69e <_IO_new_file_overflow+228>
_IO_new_file_overflow, 0x1d62a: ld	a3,16(s0)
_IO_new_file_overflow, 0x1d62c: lui	a4,0x1
_IO_new_file_overflow, 0x1d62e: addi	a4,a4,-2048
_IO_new_file_overflow, 0x1d632: lw	a0,192(s0)
_IO_new_file_overflow, 0x1d636: or	a4,a4,a5
_IO_new_file_overflow, 0x1d638: sd	a2,40(s0)
_IO_new_file_overflow, 0x1d63a: sd	a2,32(s0)
_IO_new_file_overflow, 0x1d63c: sd	a1,48(s0)
_IO_new_file_overflow, 0x1d63e: sd	a3,8(s0)
_IO_new_file_overflow, 0x1d640: sd	a3,24(s0)
_IO_new_file_overflow, 0x1d642: sw	a4,0(s0)
_IO_new_file_overflow, 0x1d644: bgtz	a0,0x1d5e0 <_IO_new_file_overflow+38>
_IO_new_file_overflow, 0x1d648: andi	a5,a5,514
_IO_new_file_overflow, 0x1d64c: beqz	a5,0x1d5e0 <_IO_new_file_overflow+38>
_IO_new_file_overflow, 0x1d5e0: li	s2,-1
_IO_new_file_overflow, 0x1d5e2: beq	s1,s2,0x1d656 <_IO_new_file_overflow+156>
_IO_new_file_overflow, 0x1d656: ld	a1,32(s0)
_IO_new_file_overflow, 0x1d658: mv	a0,s0
_IO_new_file_overflow, 0x1d65a: ld	s0,16(sp)
_IO_new_file_overflow, 0x1d65c: ld	ra,24(sp)
_IO_new_file_overflow, 0x1d65e: ld	s1,8(sp)
_IO_new_file_overflow, 0x1d660: ld	s2,0(sp)
_IO_new_file_overflow, 0x1d662: sub	a2,a2,a1
_IO_new_file_overflow, 0x1d664: addi	sp,sp,32
_IO_new_file_overflow, 0x1d666: j	0x1d08e <_IO_new_do_write>
_IO_new_do_write, 0x1d08e: bnez	a2,0x1d094 <_IO_new_do_write+6>
_IO_new_do_write, 0x1d090: li	a0,0
_IO_new_do_write, 0x1d092: ret
_IO_new_file_xsputn, 0x1ce04: li	a5,-1
_IO_new_file_xsputn, 0x1ce06: beq	a0,a5,0x1ce5a <_IO_new_file_xsputn+278>
_IO_new_file_xsputn, 0x1ce0a: ld	a5,64(s0)
_IO_new_file_xsputn, 0x1ce0c: ld	a3,56(s0)
_IO_new_file_xsputn, 0x1ce0e: li	a4,127
_IO_new_file_xsputn, 0x1ce12: mv	s5,s2
_IO_new_file_xsputn, 0x1ce14: sub	a5,a5,a3
_IO_new_file_xsputn, 0x1ce16: bgeu	a4,a5,0x1ce22 <_IO_new_file_xsputn+222>
_IO_new_file_xsputn, 0x1ce1a: remu	a5,s2,a5
_IO_new_file_xsputn, 0x1ce1e: sub	s5,s2,a5
_IO_new_file_xsputn, 0x1ce22: bnez	s5,0x1ce42 <_IO_new_file_xsputn+254>
_IO_new_file_xsputn, 0x1ce26: mv	s3,s4
_IO_new_file_xsputn, 0x1ce28: beqz	s2,0x1cd9c <_IO_new_file_xsputn+88>
_IO_new_file_xsputn, 0x1ce2c: mv	a2,s2
_IO_new_file_xsputn, 0x1ce2e: add	a1,s1,s5
_IO_new_file_xsputn, 0x1ce32: mv	a0,s0
[CALL] _IO_new_file_xsputn -> <_IO_default_xsputn>
_IO_new_file_xsputn, 0x1ce34: jal	ra,0x1e0ec <_IO_default_xsputn>
_IO_new_file_xsputn, 0x1ce38: sub	a0,a0,s2
_IO_new_file_xsputn, 0x1ce3c: add	s3,a0,s4
_IO_new_file_xsputn, 0x1ce40: j	0x1cd9c <_IO_new_file_xsputn+88>
_IO_new_file_xsputn, 0x1cd9c: ld	ra,56(sp)
_IO_new_file_xsputn, 0x1cd9e: ld	s0,48(sp)
_IO_new_file_xsputn, 0x1cda0: ld	s1,40(sp)
_IO_new_file_xsputn, 0x1cda2: ld	s2,32(sp)
_IO_new_file_xsputn, 0x1cda4: ld	s4,16(sp)
_IO_new_file_xsputn, 0x1cda6: ld	s5,8(sp)
_IO_new_file_xsputn, 0x1cda8: mv	a0,s3
_IO_new_file_xsputn, 0x1cdaa: ld	s3,24(sp)
_IO_new_file_xsputn, 0x1cdac: addi	sp,sp,64
_IO_new_file_xsputn, 0x1cdae: ret
puts, 0x1a5d4: bne	s0,a0,0x1a59a <puts+100>
puts, 0x1a5d8: ld	a0,0(s3)
puts, 0x1a5dc: ld	a5,40(a0)
puts, 0x1a5de: ld	a4,48(a0)
puts, 0x1a5e0: bgeu	a5,a4,0x1a654 <puts+286>
puts, 0x1a5e4: addi	a4,a5,1
puts, 0x1a5e8: sd	a4,40(a0)
puts, 0x1a5ea: li	a4,10
puts, 0x1a5ec: sb	a4,0(a5)
puts, 0x1a5f0: lui	a5,0x80000
puts, 0x1a5f4: addi	s0,s0,1
puts, 0x1a5f6: not	a5,a5
puts, 0x1a5fa: bltu	a5,s0,0x1a628 <puts+242>
puts, 0x1a5fe: sext.w	s0,s0
puts, 0x1a600: lw	a5,0(s1)
puts, 0x1a602: srli	a5,a5,0xf
puts, 0x1a604: andi	a5,a5,1
puts, 0x1a606: bnez	a5,0x1a616 <puts+224>
puts, 0x1a608: ld	a0,136(s1)
puts, 0x1a60a: lw	a5,4(a0)
puts, 0x1a60c: addiw	a4,a5,-1
puts, 0x1a610: sw	a4,4(a0)
puts, 0x1a612: mv	a5,a4
puts, 0x1a614: beqz	a4,0x1a62c <puts+246>
puts, 0x1a62c: sd	zero,8(a0)
puts, 0x1a630: fence	iorw,ow
puts, 0x1a634: amoswap.w	a5,a5,(a0)
puts, 0x1a638: sext.w	a5,a5
puts, 0x1a63a: li	a4,1
puts, 0x1a63c: bge	a4,a5,0x1a616 <puts+224>
puts, 0x1a616: ld	ra,40(sp)
puts, 0x1a618: mv	a0,s0
puts, 0x1a61a: ld	s0,32(sp)
puts, 0x1a61c: ld	s1,24(sp)
puts, 0x1a61e: ld	s2,16(sp)
puts, 0x1a620: ld	s3,8(sp)
puts, 0x1a622: ld	s4,0(sp)
puts, 0x1a624: addi	sp,sp,48
puts, 0x1a626: ret
main, 0x1066e: ld	a5,-32(s0)
main, 0x10672: addi	a5,a5,8
main, 0x10674: ld	a5,0(a5)
main, 0x10676: mv	a0,a5
[CALL] main -> <atoi>
main, 0x10678: jal	ra,0x148de <atoi>
atoi, 0x148de: addi	sp,sp,-16
atoi, 0x148e0: li	a2,10
atoi, 0x148e2: li	a1,0
atoi, 0x148e4: sd	ra,8(sp)
[CALL] atoi -> <strtoq>
atoi, 0x148e6: jal	ra,0x15190 <strtoq>
strtoq, 0x15190: auipc	a5,0x63
strtoq, 0x15194: ld	a5,328(a5)
strtoq, 0x15198: li	a3,0
strtoq, 0x1519a: add	a5,a5,tp
strtoq, 0x1519c: ld	a4,0(a5)
strtoq, 0x1519e: j	0x151be <____strtoll_l_internal>
____strtoll_l_internal, 0x151be: addi	sp,sp,-80
____strtoll_l_internal, 0x151c0: sd	s3,40(sp)
____strtoll_l_internal, 0x151c2: sd	s4,32(sp)
____strtoll_l_internal, 0x151c4: sd	s5,24(sp)
____strtoll_l_internal, 0x151c6: sd	s7,8(sp)
____strtoll_l_internal, 0x151c8: sd	ra,72(sp)
____strtoll_l_internal, 0x151ca: sd	s0,64(sp)
____strtoll_l_internal, 0x151cc: sd	s1,56(sp)
____strtoll_l_internal, 0x151ce: sd	s2,48(sp)
____strtoll_l_internal, 0x151d0: sd	s6,16(sp)
____strtoll_l_internal, 0x151d2: ld	a5,8(a4)
____strtoll_l_internal, 0x151d4: mv	s4,a0
____strtoll_l_internal, 0x151d6: mv	s5,a1
____strtoll_l_internal, 0x151d8: li	s7,0
____strtoll_l_internal, 0x151da: li	s3,0
____strtoll_l_internal, 0x151dc: bnez	a3,0x153d6 <____strtoll_l_internal+536>
____strtoll_l_internal, 0x151e0: li	a5,1
____strtoll_l_internal, 0x151e2: beq	a2,a5,0x152e8 <____strtoll_l_internal+298>
____strtoll_l_internal, 0x151e6: li	a5,36
____strtoll_l_internal, 0x151ea: bltu	a5,a2,0x152e8 <____strtoll_l_internal+298>
____strtoll_l_internal, 0x151ee: lbu	a1,0(s4)
____strtoll_l_internal, 0x151f2: ld	a4,104(a4)
____strtoll_l_internal, 0x151f4: lui	a3,0x2
____strtoll_l_internal, 0x151f6: slli	a5,a1,0x1
____strtoll_l_internal, 0x151fa: add	a5,a5,a4
____strtoll_l_internal, 0x151fc: lhu	a5,0(a5)
____strtoll_l_internal, 0x15200: mv	s1,s4
____strtoll_l_internal, 0x15202: lui	a0,0x2
____strtoll_l_internal, 0x15204: and	a5,a5,a3
____strtoll_l_internal, 0x15206: beqz	a5,0x1521c <____strtoll_l_internal+94>
____strtoll_l_internal, 0x1521c: beqz	a1,0x1542c <____strtoll_l_internal+622>
____strtoll_l_internal, 0x15220: li	a5,45
____strtoll_l_internal, 0x15224: beq	a1,a5,0x153d0 <____strtoll_l_internal+530>
____strtoll_l_internal, 0x15228: addi	a5,a1,-43
____strtoll_l_internal, 0x1522c: seqz	a5,a5
____strtoll_l_internal, 0x15230: slli	a5,a5,0x20
____strtoll_l_internal, 0x15232: srli	a5,a5,0x20
____strtoll_l_internal, 0x15234: li	s6,0
____strtoll_l_internal, 0x15236: add	s1,s1,a5
____strtoll_l_internal, 0x15238: lbu	s0,0(s1)
____strtoll_l_internal, 0x1523c: li	a5,48
____strtoll_l_internal, 0x15240: beq	s0,a5,0x1530e <____strtoll_l_internal+336>
____strtoll_l_internal, 0x15244: bnez	a2,0x15332 <____strtoll_l_internal+372>
____strtoll_l_internal, 0x15332: li	a5,10
____strtoll_l_internal, 0x15334: beq	a2,a5,0x15246 <____strtoll_l_internal+136>
____strtoll_l_internal, 0x15246: bnez	s7,0x15436 <____strtoll_l_internal+632>
____strtoll_l_internal, 0x1524a: li	t5,5
____strtoll_l_internal, 0x1524c: auipc	a7,0x3e
____strtoll_l_internal, 0x15250: ld	a7,-460(a7)
____strtoll_l_internal, 0x15254: li	a2,10
____strtoll_l_internal, 0x15256: beqz	s0,0x15512 <____strtoll_l_internal+852>
____strtoll_l_internal, 0x1525a: auipc	a5,0x61
____strtoll_l_internal, 0x1525e: addi	a5,a5,-1034
____strtoll_l_internal, 0x15262: ld	a0,120(a5)
____strtoll_l_internal, 0x15264: li	t3,0
____strtoll_l_internal, 0x15266: li	s2,0
____strtoll_l_internal, 0x15268: ld	t4,104(a5)
____strtoll_l_internal, 0x1526c: mv	a4,s1
____strtoll_l_internal, 0x1526e: li	a6,0
____strtoll_l_internal, 0x15270: li	a1,0
____strtoll_l_internal, 0x15272: li	t1,9
____strtoll_l_internal, 0x15274: addi	t6,s2,-1
____strtoll_l_internal, 0x15278: addiw	a5,s0,-48
____strtoll_l_internal, 0x1527c: zext.b	a5,a5
____strtoll_l_internal, 0x15280: bgeu	t1,a5,0x152a6 <____strtoll_l_internal+232>
____strtoll_l_internal, 0x152a6: bge	a5,a2,0x15386 <____strtoll_l_internal+456>
____strtoll_l_internal, 0x152aa: bltu	a7,a6,0x1535a <____strtoll_l_internal+412>
____strtoll_l_internal, 0x152ae: beq	a7,a6,0x15356 <____strtoll_l_internal+408>
____strtoll_l_internal, 0x152b2: mul	a6,a2,a6
____strtoll_l_internal, 0x152b6: add	a6,a6,a5
____strtoll_l_internal, 0x152b8: lbu	s0,1(a4)
____strtoll_l_internal, 0x152bc: addi	a4,a4,1
____strtoll_l_internal, 0x152be: beqz	s0,0x15386 <____strtoll_l_internal+456>
____strtoll_l_internal, 0x152c0: bne	a4,t3,0x15278 <____strtoll_l_internal+186>
____strtoll_l_internal, 0x15278: addiw	a5,s0,-48
____strtoll_l_internal, 0x1527c: zext.b	a5,a5
____strtoll_l_internal, 0x15280: bgeu	t1,a5,0x152a6 <____strtoll_l_internal+232>
____strtoll_l_internal, 0x152a6: bge	a5,a2,0x15386 <____strtoll_l_internal+456>
____strtoll_l_internal, 0x152aa: bltu	a7,a6,0x1535a <____strtoll_l_internal+412>
____strtoll_l_internal, 0x152ae: beq	a7,a6,0x15356 <____strtoll_l_internal+408>
____strtoll_l_internal, 0x152b2: mul	a6,a2,a6
____strtoll_l_internal, 0x152b6: add	a6,a6,a5
____strtoll_l_internal, 0x152b8: lbu	s0,1(a4)
____strtoll_l_internal, 0x152bc: addi	a4,a4,1
____strtoll_l_internal, 0x152be: beqz	s0,0x15386 <____strtoll_l_internal+456>
____strtoll_l_internal, 0x15386: bne	s1,a4,0x152c4 <____strtoll_l_internal+262>
____strtoll_l_internal, 0x152c4: beqz	s5,0x152cc <____strtoll_l_internal+270>
____strtoll_l_internal, 0x152cc: beqz	a1,0x153ba <____strtoll_l_internal+508>
____strtoll_l_internal, 0x153ba: li	a5,-1
____strtoll_l_internal, 0x153bc: srli	a5,a5,0x1
____strtoll_l_internal, 0x153be: add	a5,a5,s6
____strtoll_l_internal, 0x153c0: bltu	a5,a6,0x152ce <____strtoll_l_internal+272>
____strtoll_l_internal, 0x153c4: neg	a0,a6
____strtoll_l_internal, 0x153c8: bnez	s6,0x152f8 <____strtoll_l_internal+314>
____strtoll_l_internal, 0x153cc: mv	a0,a6
____strtoll_l_internal, 0x153ce: j	0x152f8 <____strtoll_l_internal+314>
____strtoll_l_internal, 0x152f8: ld	ra,72(sp)
____strtoll_l_internal, 0x152fa: ld	s0,64(sp)
____strtoll_l_internal, 0x152fc: ld	s1,56(sp)
____strtoll_l_internal, 0x152fe: ld	s2,48(sp)
____strtoll_l_internal, 0x15300: ld	s3,40(sp)
____strtoll_l_internal, 0x15302: ld	s4,32(sp)
____strtoll_l_internal, 0x15304: ld	s5,24(sp)
____strtoll_l_internal, 0x15306: ld	s6,16(sp)
____strtoll_l_internal, 0x15308: ld	s7,8(sp)
____strtoll_l_internal, 0x1530a: addi	sp,sp,80
____strtoll_l_internal, 0x1530c: ret
atoi, 0x148ea: ld	ra,8(sp)
atoi, 0x148ec: sext.w	a0,a0
atoi, 0x148ee: addi	sp,sp,16
atoi, 0x148f0: ret
main, 0x1067c: mv	a5,a0
main, 0x1067e: mv	a0,a5
[CALL] main -> <recurse>
main, 0x10680: jal	ra,0x107c8 <recurse>
recurse, 0x107c8: addi	sp,sp,-32
recurse, 0x107ca: sd	ra,24(sp)
recurse, 0x107cc: sd	s0,16(sp)
recurse, 0x107ce: addi	s0,sp,32
recurse, 0x107d0: mv	a5,a0
recurse, 0x107d2: sw	a5,-20(s0)
recurse, 0x107d6: lw	a5,-20(s0)
recurse, 0x107da: sext.w	a5,a5
recurse, 0x107dc: beqz	a5,0x10800 <recurse+56>
recurse, 0x107de: lw	a5,-20(s0)
recurse, 0x107e2: mv	a1,a5
recurse, 0x107e4: lui	a5,0x52
recurse, 0x107e8: addi	a0,a5,1040
[CALL] recurse -> <printf>
recurse, 0x107ec: jal	ra,0x159f4 <printf>
printf, 0x159f4: mv	t3,a0
printf, 0x159f6: auipc	a0,0x62
printf, 0x159fa: ld	a0,1466(a0)
printf, 0x159fe: addi	sp,sp,-96
printf, 0x15a00: ld	a0,0(a0)
printf, 0x15a02: addi	t1,sp,40
printf, 0x15a06: sd	s0,16(sp)
printf, 0x15a08: auipc	s0,0x62
printf, 0x15a0c: ld	s0,1480(s0)
printf, 0x15a10: sd	a1,40(sp)
printf, 0x15a12: sd	a2,48(sp)
printf, 0x15a14: sd	a3,56(sp)
printf, 0x15a16: sd	a5,72(sp)
printf, 0x15a18: li	a3,0
printf, 0x15a1a: ld	a5,0(s0)
printf, 0x15a1c: sd	a5,8(sp)
printf, 0x15a1e: li	a5,0
printf, 0x15a20: mv	a2,t1
printf, 0x15a22: mv	a1,t3
printf, 0x15a24: sd	a4,64(sp)
printf, 0x15a26: sd	ra,24(sp)
printf, 0x15a28: sd	a6,80(sp)
printf, 0x15a2a: sd	a7,88(sp)
printf, 0x15a2c: sd	t1,0(sp)
[CALL] printf -> <__vfprintf_internal>
printf, 0x15a2e: jal	ra,0x181a6 <__vfprintf_internal>
printf, 0x15a32: ld	a4,8(sp)
printf, 0x15a34: ld	a5,0(s0)
printf, 0x15a36: xor	a5,a5,a4
printf, 0x15a38: li	a4,0
printf, 0x15a3a: bnez	a5,0x15a44 <printf+80>
printf, 0x15a3c: ld	ra,24(sp)
printf, 0x15a3e: ld	s0,16(sp)
printf, 0x15a40: addi	sp,sp,96
printf, 0x15a42: ret
recurse, 0x107f0: lw	a5,-20(s0)
recurse, 0x107f4: addiw	a5,a5,-1
recurse, 0x107f6: sext.w	a5,a5
recurse, 0x107f8: mv	a0,a5
[CALL] recurse -> <recurse>
recurse, 0x107fa: jal	ra,0x107c8 <recurse>
recurse, 0x107c8: addi	sp,sp,-32
recurse, 0x107ca: sd	ra,24(sp)
recurse, 0x107cc: sd	s0,16(sp)
recurse, 0x107ce: addi	s0,sp,32
recurse, 0x107d0: mv	a5,a0
recurse, 0x107d2: sw	a5,-20(s0)
recurse, 0x107d6: lw	a5,-20(s0)
recurse, 0x107da: sext.w	a5,a5
recurse, 0x107dc: beqz	a5,0x10800 <recurse+56>
recurse, 0x107de: lw	a5,-20(s0)
recurse, 0x107e2: mv	a1,a5
recurse, 0x107e4: lui	a5,0x52
recurse, 0x107e8: addi	a0,a5,1040
[CALL] recurse -> <printf>
recurse, 0x107ec: jal	ra,0x159f4 <printf>
printf, 0x159f4: mv	t3,a0
printf, 0x159f6: auipc	a0,0x62
printf, 0x159fa: ld	a0,1466(a0)
printf, 0x159fe: addi	sp,sp,-96
printf, 0x15a00: ld	a0,0(a0)
printf, 0x15a02: addi	t1,sp,40
printf, 0x15a06: sd	s0,16(sp)
printf, 0x15a08: auipc	s0,0x62
printf, 0x15a0c: ld	s0,1480(s0)
printf, 0x15a10: sd	a1,40(sp)
printf, 0x15a12: sd	a2,48(sp)
printf, 0x15a14: sd	a3,56(sp)
printf, 0x15a16: sd	a5,72(sp)
printf, 0x15a18: li	a3,0
printf, 0x15a1a: ld	a5,0(s0)
printf, 0x15a1c: sd	a5,8(sp)
printf, 0x15a1e: li	a5,0
printf, 0x15a20: mv	a2,t1
printf, 0x15a22: mv	a1,t3
printf, 0x15a24: sd	a4,64(sp)
printf, 0x15a26: sd	ra,24(sp)
printf, 0x15a28: sd	a6,80(sp)
printf, 0x15a2a: sd	a7,88(sp)
printf, 0x15a2c: sd	t1,0(sp)
[CALL] printf -> <__vfprintf_internal>
printf, 0x15a2e: jal	ra,0x181a6 <__vfprintf_internal>
printf, 0x15a32: ld	a4,8(sp)
printf, 0x15a34: ld	a5,0(s0)
printf, 0x15a36: xor	a5,a5,a4
printf, 0x15a38: li	a4,0
printf, 0x15a3a: bnez	a5,0x15a44 <printf+80>
printf, 0x15a3c: ld	ra,24(sp)
printf, 0x15a3e: ld	s0,16(sp)
printf, 0x15a40: addi	sp,sp,96
printf, 0x15a42: ret
recurse, 0x107f0: lw	a5,-20(s0)
recurse, 0x107f4: addiw	a5,a5,-1
recurse, 0x107f6: sext.w	a5,a5
recurse, 0x107f8: mv	a0,a5
[CALL] recurse -> <recurse>
recurse, 0x107fa: jal	ra,0x107c8 <recurse>
recurse, 0x107c8: addi	sp,sp,-32
recurse, 0x107ca: sd	ra,24(sp)
recurse, 0x107cc: sd	s0,16(sp)
recurse, 0x107ce: addi	s0,sp,32
recurse, 0x107d0: mv	a5,a0
recurse, 0x107d2: sw	a5,-20(s0)
recurse, 0x107d6: lw	a5,-20(s0)
recurse, 0x107da: sext.w	a5,a5
recurse, 0x107dc: beqz	a5,0x10800 <recurse+56>
recurse, 0x107de: lw	a5,-20(s0)
recurse, 0x107e2: mv	a1,a5
recurse, 0x107e4: lui	a5,0x52
recurse, 0x107e8: addi	a0,a5,1040
[CALL] recurse -> <printf>
recurse, 0x107ec: jal	ra,0x159f4 <printf>
printf, 0x159f4: mv	t3,a0
printf, 0x159f6: auipc	a0,0x62
printf, 0x159fa: ld	a0,1466(a0)
printf, 0x159fe: addi	sp,sp,-96
printf, 0x15a00: ld	a0,0(a0)
printf, 0x15a02: addi	t1,sp,40
printf, 0x15a06: sd	s0,16(sp)
printf, 0x15a08: auipc	s0,0x62
printf, 0x15a0c: ld	s0,1480(s0)
printf, 0x15a10: sd	a1,40(sp)
printf, 0x15a12: sd	a2,48(sp)
printf, 0x15a14: sd	a3,56(sp)
printf, 0x15a16: sd	a5,72(sp)
printf, 0x15a18: li	a3,0
printf, 0x15a1a: ld	a5,0(s0)
printf, 0x15a1c: sd	a5,8(sp)
printf, 0x15a1e: li	a5,0
printf, 0x15a20: mv	a2,t1
printf, 0x15a22: mv	a1,t3
printf, 0x15a24: sd	a4,64(sp)
printf, 0x15a26: sd	ra,24(sp)
printf, 0x15a28: sd	a6,80(sp)
printf, 0x15a2a: sd	a7,88(sp)
printf, 0x15a2c: sd	t1,0(sp)
[CALL] printf -> <__vfprintf_internal>
printf, 0x15a2e: jal	ra,0x181a6 <__vfprintf_internal>
printf, 0x15a32: ld	a4,8(sp)
printf, 0x15a34: ld	a5,0(s0)
printf, 0x15a36: xor	a5,a5,a4
printf, 0x15a38: li	a4,0
printf, 0x15a3a: bnez	a5,0x15a44 <printf+80>
printf, 0x15a3c: ld	ra,24(sp)
printf, 0x15a3e: ld	s0,16(sp)
printf, 0x15a40: addi	sp,sp,96
printf, 0x15a42: ret
recurse, 0x107f0: lw	a5,-20(s0)
recurse, 0x107f4: addiw	a5,a5,-1
recurse, 0x107f6: sext.w	a5,a5
recurse, 0x107f8: mv	a0,a5
[CALL] recurse -> <recurse>
recurse, 0x107fa: jal	ra,0x107c8 <recurse>
recurse, 0x107c8: addi	sp,sp,-32
recurse, 0x107ca: sd	ra,24(sp)
recurse, 0x107cc: sd	s0,16(sp)
recurse, 0x107ce: addi	s0,sp,32
recurse, 0x107d0: mv	a5,a0
recurse, 0x107d2: sw	a5,-20(s0)
recurse, 0x107d6: lw	a5,-20(s0)
recurse, 0x107da: sext.w	a5,a5
recurse, 0x107dc: beqz	a5,0x10800 <recurse+56>
recurse, 0x107de: lw	a5,-20(s0)
recurse, 0x107e2: mv	a1,a5
recurse, 0x107e4: lui	a5,0x52
recurse, 0x107e8: addi	a0,a5,1040
[CALL] recurse -> <printf>
recurse, 0x107ec: jal	ra,0x159f4 <printf>
printf, 0x159f4: mv	t3,a0
printf, 0x159f6: auipc	a0,0x62
printf, 0x159fa: ld	a0,1466(a0)
printf, 0x159fe: addi	sp,sp,-96
printf, 0x15a00: ld	a0,0(a0)
printf, 0x15a02: addi	t1,sp,40
printf, 0x15a06: sd	s0,16(sp)
printf, 0x15a08: auipc	s0,0x62
printf, 0x15a0c: ld	s0,1480(s0)
printf, 0x15a10: sd	a1,40(sp)
printf, 0x15a12: sd	a2,48(sp)
printf, 0x15a14: sd	a3,56(sp)
printf, 0x15a16: sd	a5,72(sp)
printf, 0x15a18: li	a3,0
printf, 0x15a1a: ld	a5,0(s0)
printf, 0x15a1c: sd	a5,8(sp)
printf, 0x15a1e: li	a5,0
printf, 0x15a20: mv	a2,t1
printf, 0x15a22: mv	a1,t3
printf, 0x15a24: sd	a4,64(sp)
printf, 0x15a26: sd	ra,24(sp)
printf, 0x15a28: sd	a6,80(sp)
printf, 0x15a2a: sd	a7,88(sp)
printf, 0x15a2c: sd	t1,0(sp)
[CALL] printf -> <__vfprintf_internal>
printf, 0x15a2e: jal	ra,0x181a6 <__vfprintf_internal>
printf, 0x15a32: ld	a4,8(sp)
printf, 0x15a34: ld	a5,0(s0)
printf, 0x15a36: xor	a5,a5,a4
printf, 0x15a38: li	a4,0
printf, 0x15a3a: bnez	a5,0x15a44 <printf+80>
printf, 0x15a3c: ld	ra,24(sp)
printf, 0x15a3e: ld	s0,16(sp)
printf, 0x15a40: addi	sp,sp,96
printf, 0x15a42: ret
recurse, 0x107f0: lw	a5,-20(s0)
recurse, 0x107f4: addiw	a5,a5,-1
recurse, 0x107f6: sext.w	a5,a5
recurse, 0x107f8: mv	a0,a5
[CALL] recurse -> <recurse>
recurse, 0x107fa: jal	ra,0x107c8 <recurse>
recurse, 0x107c8: addi	sp,sp,-32
recurse, 0x107ca: sd	ra,24(sp)
recurse, 0x107cc: sd	s0,16(sp)
recurse, 0x107ce: addi	s0,sp,32
recurse, 0x107d0: mv	a5,a0
recurse, 0x107d2: sw	a5,-20(s0)
recurse, 0x107d6: lw	a5,-20(s0)
recurse, 0x107da: sext.w	a5,a5
recurse, 0x107dc: beqz	a5,0x10800 <recurse+56>
recurse, 0x107de: lw	a5,-20(s0)
recurse, 0x107e2: mv	a1,a5
recurse, 0x107e4: lui	a5,0x52
recurse, 0x107e8: addi	a0,a5,1040
[CALL] recurse -> <printf>
recurse, 0x107ec: jal	ra,0x159f4 <printf>
printf, 0x159f4: mv	t3,a0
printf, 0x159f6: auipc	a0,0x62
printf, 0x159fa: ld	a0,1466(a0)
printf, 0x159fe: addi	sp,sp,-96
printf, 0x15a00: ld	a0,0(a0)
printf, 0x15a02: addi	t1,sp,40
printf, 0x15a06: sd	s0,16(sp)
printf, 0x15a08: auipc	s0,0x62
printf, 0x15a0c: ld	s0,1480(s0)
printf, 0x15a10: sd	a1,40(sp)
printf, 0x15a12: sd	a2,48(sp)
printf, 0x15a14: sd	a3,56(sp)
printf, 0x15a16: sd	a5,72(sp)
printf, 0x15a18: li	a3,0
printf, 0x15a1a: ld	a5,0(s0)
printf, 0x15a1c: sd	a5,8(sp)
printf, 0x15a1e: li	a5,0
printf, 0x15a20: mv	a2,t1
printf, 0x15a22: mv	a1,t3
printf, 0x15a24: sd	a4,64(sp)
printf, 0x15a26: sd	ra,24(sp)
printf, 0x15a28: sd	a6,80(sp)
printf, 0x15a2a: sd	a7,88(sp)
printf, 0x15a2c: sd	t1,0(sp)
[CALL] printf -> <__vfprintf_internal>
printf, 0x15a2e: jal	ra,0x181a6 <__vfprintf_internal>
printf, 0x15a32: ld	a4,8(sp)
printf, 0x15a34: ld	a5,0(s0)
printf, 0x15a36: xor	a5,a5,a4
printf, 0x15a38: li	a4,0
printf, 0x15a3a: bnez	a5,0x15a44 <printf+80>
printf, 0x15a3c: ld	ra,24(sp)
printf, 0x15a3e: ld	s0,16(sp)
printf, 0x15a40: addi	sp,sp,96
printf, 0x15a42: ret
recurse, 0x107f0: lw	a5,-20(s0)
recurse, 0x107f4: addiw	a5,a5,-1
recurse, 0x107f6: sext.w	a5,a5
recurse, 0x107f8: mv	a0,a5
[CALL] recurse -> <recurse>
recurse, 0x107fa: jal	ra,0x107c8 <recurse>
recurse, 0x107c8: addi	sp,sp,-32
recurse, 0x107ca: sd	ra,24(sp)
recurse, 0x107cc: sd	s0,16(sp)
recurse, 0x107ce: addi	s0,sp,32
recurse, 0x107d0: mv	a5,a0
recurse, 0x107d2: sw	a5,-20(s0)
recurse, 0x107d6: lw	a5,-20(s0)
recurse, 0x107da: sext.w	a5,a5
recurse, 0x107dc: beqz	a5,0x10800 <recurse+56>
recurse, 0x107de: lw	a5,-20(s0)
recurse, 0x107e2: mv	a1,a5
recurse, 0x107e4: lui	a5,0x52
recurse, 0x107e8: addi	a0,a5,1040
[CALL] recurse -> <printf>
recurse, 0x107ec: jal	ra,0x159f4 <printf>
printf, 0x159f4: mv	t3,a0
printf, 0x159f6: auipc	a0,0x62
printf, 0x159fa: ld	a0,1466(a0)
printf, 0x159fe: addi	sp,sp,-96
printf, 0x15a00: ld	a0,0(a0)
printf, 0x15a02: addi	t1,sp,40
printf, 0x15a06: sd	s0,16(sp)
printf, 0x15a08: auipc	s0,0x62
printf, 0x15a0c: ld	s0,1480(s0)
printf, 0x15a10: sd	a1,40(sp)
printf, 0x15a12: sd	a2,48(sp)
printf, 0x15a14: sd	a3,56(sp)
printf, 0x15a16: sd	a5,72(sp)
printf, 0x15a18: li	a3,0
printf, 0x15a1a: ld	a5,0(s0)
printf, 0x15a1c: sd	a5,8(sp)
printf, 0x15a1e: li	a5,0
printf, 0x15a20: mv	a2,t1
printf, 0x15a22: mv	a1,t3
printf, 0x15a24: sd	a4,64(sp)
printf, 0x15a26: sd	ra,24(sp)
printf, 0x15a28: sd	a6,80(sp)
printf, 0x15a2a: sd	a7,88(sp)
printf, 0x15a2c: sd	t1,0(sp)
[CALL] printf -> <__vfprintf_internal>
printf, 0x15a2e: jal	ra,0x181a6 <__vfprintf_internal>
printf, 0x15a32: ld	a4,8(sp)
printf, 0x15a34: ld	a5,0(s0)
printf, 0x15a36: xor	a5,a5,a4
printf, 0x15a38: li	a4,0
printf, 0x15a3a: bnez	a5,0x15a44 <printf+80>
printf, 0x15a3c: ld	ra,24(sp)
printf, 0x15a3e: ld	s0,16(sp)
printf, 0x15a40: addi	sp,sp,96
printf, 0x15a42: ret
recurse, 0x107f0: lw	a5,-20(s0)
recurse, 0x107f4: addiw	a5,a5,-1
recurse, 0x107f6: sext.w	a5,a5
recurse, 0x107f8: mv	a0,a5
[CALL] recurse -> <recurse>
recurse, 0x107fa: jal	ra,0x107c8 <recurse>
recurse, 0x107c8: addi	sp,sp,-32
recurse, 0x107ca: sd	ra,24(sp)
recurse, 0x107cc: sd	s0,16(sp)
recurse, 0x107ce: addi	s0,sp,32
recurse, 0x107d0: mv	a5,a0
recurse, 0x107d2: sw	a5,-20(s0)
recurse, 0x107d6: lw	a5,-20(s0)
recurse, 0x107da: sext.w	a5,a5
recurse, 0x107dc: beqz	a5,0x10800 <recurse+56>
recurse, 0x107de: lw	a5,-20(s0)
recurse, 0x107e2: mv	a1,a5
recurse, 0x107e4: lui	a5,0x52
recurse, 0x107e8: addi	a0,a5,1040
[CALL] recurse -> <printf>
recurse, 0x107ec: jal	ra,0x159f4 <printf>
printf, 0x159f4: mv	t3,a0
printf, 0x159f6: auipc	a0,0x62
printf, 0x159fa: ld	a0,1466(a0)
printf, 0x159fe: addi	sp,sp,-96
printf, 0x15a00: ld	a0,0(a0)
printf, 0x15a02: addi	t1,sp,40
printf, 0x15a06: sd	s0,16(sp)
printf, 0x15a08: auipc	s0,0x62
printf, 0x15a0c: ld	s0,1480(s0)
printf, 0x15a10: sd	a1,40(sp)
printf, 0x15a12: sd	a2,48(sp)
printf, 0x15a14: sd	a3,56(sp)
printf, 0x15a16: sd	a5,72(sp)
printf, 0x15a18: li	a3,0
printf, 0x15a1a: ld	a5,0(s0)
printf, 0x15a1c: sd	a5,8(sp)
printf, 0x15a1e: li	a5,0
printf, 0x15a20: mv	a2,t1
printf, 0x15a22: mv	a1,t3
printf, 0x15a24: sd	a4,64(sp)
printf, 0x15a26: sd	ra,24(sp)
printf, 0x15a28: sd	a6,80(sp)
printf, 0x15a2a: sd	a7,88(sp)
printf, 0x15a2c: sd	t1,0(sp)
[CALL] printf -> <__vfprintf_internal>
printf, 0x15a2e: jal	ra,0x181a6 <__vfprintf_internal>
printf, 0x15a32: ld	a4,8(sp)
printf, 0x15a34: ld	a5,0(s0)
printf, 0x15a36: xor	a5,a5,a4
printf, 0x15a38: li	a4,0
printf, 0x15a3a: bnez	a5,0x15a44 <printf+80>
printf, 0x15a3c: ld	ra,24(sp)
printf, 0x15a3e: ld	s0,16(sp)
printf, 0x15a40: addi	sp,sp,96
printf, 0x15a42: ret
recurse, 0x107f0: lw	a5,-20(s0)
recurse, 0x107f4: addiw	a5,a5,-1
recurse, 0x107f6: sext.w	a5,a5
recurse, 0x107f8: mv	a0,a5
[CALL] recurse -> <recurse>
recurse, 0x107fa: jal	ra,0x107c8 <recurse>
recurse, 0x107c8: addi	sp,sp,-32
recurse, 0x107ca: sd	ra,24(sp)
recurse, 0x107cc: sd	s0,16(sp)
recurse, 0x107ce: addi	s0,sp,32
recurse, 0x107d0: mv	a5,a0
recurse, 0x107d2: sw	a5,-20(s0)
recurse, 0x107d6: lw	a5,-20(s0)
recurse, 0x107da: sext.w	a5,a5
recurse, 0x107dc: beqz	a5,0x10800 <recurse+56>
recurse, 0x107de: lw	a5,-20(s0)
recurse, 0x107e2: mv	a1,a5
recurse, 0x107e4: lui	a5,0x52
recurse, 0x107e8: addi	a0,a5,1040
[CALL] recurse -> <printf>
recurse, 0x107ec: jal	ra,0x159f4 <printf>
printf, 0x159f4: mv	t3,a0
printf, 0x159f6: auipc	a0,0x62
printf, 0x159fa: ld	a0,1466(a0)
printf, 0x159fe: addi	sp,sp,-96
printf, 0x15a00: ld	a0,0(a0)
printf, 0x15a02: addi	t1,sp,40
printf, 0x15a06: sd	s0,16(sp)
printf, 0x15a08: auipc	s0,0x62
printf, 0x15a0c: ld	s0,1480(s0)
printf, 0x15a10: sd	a1,40(sp)
printf, 0x15a12: sd	a2,48(sp)
printf, 0x15a14: sd	a3,56(sp)
printf, 0x15a16: sd	a5,72(sp)
printf, 0x15a18: li	a3,0
printf, 0x15a1a: ld	a5,0(s0)
printf, 0x15a1c: sd	a5,8(sp)
printf, 0x15a1e: li	a5,0
printf, 0x15a20: mv	a2,t1
printf, 0x15a22: mv	a1,t3
printf, 0x15a24: sd	a4,64(sp)
printf, 0x15a26: sd	ra,24(sp)
printf, 0x15a28: sd	a6,80(sp)
printf, 0x15a2a: sd	a7,88(sp)
printf, 0x15a2c: sd	t1,0(sp)
[CALL] printf -> <__vfprintf_internal>
printf, 0x15a2e: jal	ra,0x181a6 <__vfprintf_internal>
printf, 0x15a32: ld	a4,8(sp)
printf, 0x15a34: ld	a5,0(s0)
printf, 0x15a36: xor	a5,a5,a4
printf, 0x15a38: li	a4,0
printf, 0x15a3a: bnez	a5,0x15a44 <printf+80>
printf, 0x15a3c: ld	ra,24(sp)
printf, 0x15a3e: ld	s0,16(sp)
printf, 0x15a40: addi	sp,sp,96
printf, 0x15a42: ret
recurse, 0x107f0: lw	a5,-20(s0)
recurse, 0x107f4: addiw	a5,a5,-1
recurse, 0x107f6: sext.w	a5,a5
recurse, 0x107f8: mv	a0,a5
[CALL] recurse -> <recurse>
recurse, 0x107fa: jal	ra,0x107c8 <recurse>
recurse, 0x107c8: addi	sp,sp,-32
recurse, 0x107ca: sd	ra,24(sp)
recurse, 0x107cc: sd	s0,16(sp)
recurse, 0x107ce: addi	s0,sp,32
recurse, 0x107d0: mv	a5,a0
recurse, 0x107d2: sw	a5,-20(s0)
recurse, 0x107d6: lw	a5,-20(s0)
recurse, 0x107da: sext.w	a5,a5
recurse, 0x107dc: beqz	a5,0x10800 <recurse+56>
recurse, 0x107de: lw	a5,-20(s0)
recurse, 0x107e2: mv	a1,a5
recurse, 0x107e4: lui	a5,0x52
recurse, 0x107e8: addi	a0,a5,1040
[CALL] recurse -> <printf>
recurse, 0x107ec: jal	ra,0x159f4 <printf>
printf, 0x159f4: mv	t3,a0
printf, 0x159f6: auipc	a0,0x62
printf, 0x159fa: ld	a0,1466(a0)
printf, 0x159fe: addi	sp,sp,-96
printf, 0x15a00: ld	a0,0(a0)
printf, 0x15a02: addi	t1,sp,40
printf, 0x15a06: sd	s0,16(sp)
printf, 0x15a08: auipc	s0,0x62
printf, 0x15a0c: ld	s0,1480(s0)
printf, 0x15a10: sd	a1,40(sp)
printf, 0x15a12: sd	a2,48(sp)
printf, 0x15a14: sd	a3,56(sp)
printf, 0x15a16: sd	a5,72(sp)
printf, 0x15a18: li	a3,0
printf, 0x15a1a: ld	a5,0(s0)
printf, 0x15a1c: sd	a5,8(sp)
printf, 0x15a1e: li	a5,0
printf, 0x15a20: mv	a2,t1
printf, 0x15a22: mv	a1,t3
printf, 0x15a24: sd	a4,64(sp)
printf, 0x15a26: sd	ra,24(sp)
printf, 0x15a28: sd	a6,80(sp)
printf, 0x15a2a: sd	a7,88(sp)
printf, 0x15a2c: sd	t1,0(sp)
[CALL] printf -> <__vfprintf_internal>
printf, 0x15a2e: jal	ra,0x181a6 <__vfprintf_internal>
printf, 0x15a32: ld	a4,8(sp)
printf, 0x15a34: ld	a5,0(s0)
printf, 0x15a36: xor	a5,a5,a4
printf, 0x15a38: li	a4,0
printf, 0x15a3a: bnez	a5,0x15a44 <printf+80>
printf, 0x15a3c: ld	ra,24(sp)
printf, 0x15a3e: ld	s0,16(sp)
printf, 0x15a40: addi	sp,sp,96
printf, 0x15a42: ret
recurse, 0x107f0: lw	a5,-20(s0)
recurse, 0x107f4: addiw	a5,a5,-1
recurse, 0x107f6: sext.w	a5,a5
recurse, 0x107f8: mv	a0,a5
[CALL] recurse -> <recurse>
recurse, 0x107fa: jal	ra,0x107c8 <recurse>
recurse, 0x107c8: addi	sp,sp,-32
recurse, 0x107ca: sd	ra,24(sp)
recurse, 0x107cc: sd	s0,16(sp)
recurse, 0x107ce: addi	s0,sp,32
recurse, 0x107d0: mv	a5,a0
recurse, 0x107d2: sw	a5,-20(s0)
recurse, 0x107d6: lw	a5,-20(s0)
recurse, 0x107da: sext.w	a5,a5
recurse, 0x107dc: beqz	a5,0x10800 <recurse+56>
recurse, 0x107de: lw	a5,-20(s0)
recurse, 0x107e2: mv	a1,a5
recurse, 0x107e4: lui	a5,0x52
recurse, 0x107e8: addi	a0,a5,1040
[CALL] recurse -> <printf>
recurse, 0x107ec: jal	ra,0x159f4 <printf>
printf, 0x159f4: mv	t3,a0
printf, 0x159f6: auipc	a0,0x62
printf, 0x159fa: ld	a0,1466(a0)
printf, 0x159fe: addi	sp,sp,-96
printf, 0x15a00: ld	a0,0(a0)
printf, 0x15a02: addi	t1,sp,40
printf, 0x15a06: sd	s0,16(sp)
printf, 0x15a08: auipc	s0,0x62
printf, 0x15a0c: ld	s0,1480(s0)
printf, 0x15a10: sd	a1,40(sp)
printf, 0x15a12: sd	a2,48(sp)
printf, 0x15a14: sd	a3,56(sp)
printf, 0x15a16: sd	a5,72(sp)
printf, 0x15a18: li	a3,0
printf, 0x15a1a: ld	a5,0(s0)
printf, 0x15a1c: sd	a5,8(sp)
printf, 0x15a1e: li	a5,0
printf, 0x15a20: mv	a2,t1
printf, 0x15a22: mv	a1,t3
printf, 0x15a24: sd	a4,64(sp)
printf, 0x15a26: sd	ra,24(sp)
printf, 0x15a28: sd	a6,80(sp)
printf, 0x15a2a: sd	a7,88(sp)
printf, 0x15a2c: sd	t1,0(sp)
[CALL] printf -> <__vfprintf_internal>
printf, 0x15a2e: jal	ra,0x181a6 <__vfprintf_internal>
printf, 0x15a32: ld	a4,8(sp)
printf, 0x15a34: ld	a5,0(s0)
printf, 0x15a36: xor	a5,a5,a4
printf, 0x15a38: li	a4,0
printf, 0x15a3a: bnez	a5,0x15a44 <printf+80>
printf, 0x15a3c: ld	ra,24(sp)
printf, 0x15a3e: ld	s0,16(sp)
printf, 0x15a40: addi	sp,sp,96
printf, 0x15a42: ret
recurse, 0x107f0: lw	a5,-20(s0)
recurse, 0x107f4: addiw	a5,a5,-1
recurse, 0x107f6: sext.w	a5,a5
recurse, 0x107f8: mv	a0,a5
[CALL] recurse -> <recurse>
recurse, 0x107fa: jal	ra,0x107c8 <recurse>
recurse, 0x107c8: addi	sp,sp,-32
recurse, 0x107ca: sd	ra,24(sp)
recurse, 0x107cc: sd	s0,16(sp)
recurse, 0x107ce: addi	s0,sp,32
recurse, 0x107d0: mv	a5,a0
recurse, 0x107d2: sw	a5,-20(s0)
recurse, 0x107d6: lw	a5,-20(s0)
recurse, 0x107da: sext.w	a5,a5
recurse, 0x107dc: beqz	a5,0x10800 <recurse+56>
recurse, 0x10800: nop
recurse, 0x10802: ld	ra,24(sp)
recurse, 0x10804: ld	s0,16(sp)
recurse, 0x10806: addi	sp,sp,32
recurse, 0x10808: ret
recurse, 0x107fe: j	0x10802 <recurse+58>
recurse, 0x10802: ld	ra,24(sp)
recurse, 0x10804: ld	s0,16(sp)
recurse, 0x10806: addi	sp,sp,32
recurse, 0x10808: ret
recurse, 0x107fe: j	0x10802 <recurse+58>
recurse, 0x10802: ld	ra,24(sp)
recurse, 0x10804: ld	s0,16(sp)
recurse, 0x10806: addi	sp,sp,32
recurse, 0x10808: ret
recurse, 0x107fe: j	0x10802 <recurse+58>
recurse, 0x10802: ld	ra,24(sp)
recurse, 0x10804: ld	s0,16(sp)
recurse, 0x10806: addi	sp,sp,32
recurse, 0x10808: ret
recurse, 0x107fe: j	0x10802 <recurse+58>
recurse, 0x10802: ld	ra,24(sp)
recurse, 0x10804: ld	s0,16(sp)
recurse, 0x10806: addi	sp,sp,32
recurse, 0x10808: ret
recurse, 0x107fe: j	0x10802 <recurse+58>
recurse, 0x10802: ld	ra,24(sp)
recurse, 0x10804: ld	s0,16(sp)
recurse, 0x10806: addi	sp,sp,32
recurse, 0x10808: ret
recurse, 0x107fe: j	0x10802 <recurse+58>
recurse, 0x10802: ld	ra,24(sp)
recurse, 0x10804: ld	s0,16(sp)
recurse, 0x10806: addi	sp,sp,32
recurse, 0x10808: ret
recurse, 0x107fe: j	0x10802 <recurse+58>
recurse, 0x10802: ld	ra,24(sp)
recurse, 0x10804: ld	s0,16(sp)
recurse, 0x10806: addi	sp,sp,32
recurse, 0x10808: ret
recurse, 0x107fe: j	0x10802 <recurse+58>
recurse, 0x10802: ld	ra,24(sp)
recurse, 0x10804: ld	s0,16(sp)
recurse, 0x10806: addi	sp,sp,32
recurse, 0x10808: ret
recurse, 0x107fe: j	0x10802 <recurse+58>
recurse, 0x10802: ld	ra,24(sp)
recurse, 0x10804: ld	s0,16(sp)
recurse, 0x10806: addi	sp,sp,32
recurse, 0x10808: ret
recurse, 0x107fe: j	0x10802 <recurse+58>
recurse, 0x10802: ld	ra,24(sp)
recurse, 0x10804: ld	s0,16(sp)
recurse, 0x10806: addi	sp,sp,32
recurse, 0x10808: ret
main, 0x10684: li	a5,0
main, 0x10686: mv	a0,a5
main, 0x10688: ld	ra,24(sp)
main, 0x1068a: ld	s0,16(sp)
main, 0x1068c: addi	sp,sp,32
main, 0x1068e: ret
[CALL] __libc_start_call_main -> <exit>
__libc_start_call_main, 0x10d0a: jal	ra,0x14fec <exit>
exit, 0x14fec: addi	sp,sp,-16
exit, 0x14fee: li	a3,1
exit, 0x14ff0: li	a2,1
exit, 0x14ff2: auipc	a1,0x61
exit, 0x14ff6: addi	a1,a1,22
exit, 0x14ffa: sd	ra,8(sp)
[CALL] exit -> <__run_exit_handlers>
exit, 0x14ffc: jal	ra,0x14e0e <__run_exit_handlers>
